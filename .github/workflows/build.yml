# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    tags: 
     - "v*"
  pull_request:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build
      run: mvn -B package --file pom.xml
    - name: Package with Maven
      run: mvn package spring-boot:repackage -DskipTests
    - name: Version
      run: |
        touch version.txt
        date +%s >> version.txt
        mv ./version.txt ./target
        cp docker/Dockerfile ./target
    - name: Export
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: |
          target/*.jar
          target/version.txt
          target/Dockerfile
  image:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions: 
      contents: read
      packages: write
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
      - name: Authenticate With The Registry ${{ env.REGISTRY }}
        if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare  Environment For Building Docker Image
        run: |
          pwd
          mkdir ops
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: ops/
      - name: Build/Push Image
        uses: docker/build-push-action@v3
        with:
          context: ops/
          file: ops/Dockerfile
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
        
